name: Nightly Build
permissions:
  contents: read

on:
  schedule: # runs on the default branch: master
    - cron: "10 20 * * *" # run at 6:10 AM
  workflow_dispatch:

jobs:
  # check_date:
  #   runs-on: ubuntu-latest
  #   name: Check latest commit
  #   outputs:
  #     should_run: ${{ steps.should_run.outputs.should_run }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: print latest_commit
  #       run: echo ${{ github.sha }}

  #     - id: should_run
  #       continue-on-error: true
  #       name: check latest commit is less than a day
  #       if: ${{ github.event_name == 'schedule' }}
  #       run: test -z $(git rev-list  --after="24 hours" ${{ github.sha }}) && echo "should_run=false" >> $GITHUB_OUTPUT

  # call-build-workflow:
  #   name: Call Build
  #   needs: check_date
  #   if: |
  #     ${{ needs.check_date.outputs.should_run != 'false' }}
  #     && startsWith(github.ref, 'refs/heads/master')
  #     && ! contains(github.head_ref, 'refs/heads/chore/')
  #   uses: evcc-io/evcc/.github/workflows/default.yml@master

  docker:
    name: Publish Docker :nightly
    # needs:
    #   - call-build-workflow
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          ref: refs/heads/evcc-master # force master
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Merge our master branch into evcc-master for building
        run: |
          git merge origin/master --no-commit --no-ff || true
          git reset -- .github/workflows
          git commit -m "merge from evcc/master"

      - name: Get dist from cache
        uses: actions/cache/restore@v4
        id: cache-dist
        with:
          path: dist
          key: ${{ runner.os }}-${{ github.sha }}-dist

      - name: Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Define tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/jeffborg/evcc
          tags: |
            type=raw,value=nightly
            type=raw,value=nightly.{{date 'YYYYMMDD'}}-{{sha}}

      - name: Publish
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v6
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Delete old nightly.* tags from GHCR
        env:
          GHCR_USERNAME: ${{ github.actor }}
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Or use a PAT with 'write:packages' scope
        run: |
          repo="ghcr.io/jeffborg/evcc"
          tags=$(curl -s -H "Authorization: Bearer $GHCR_TOKEN" "https://api.github.com/users/jeffborg/packages/container/evcc/versions" | jq -r '.[] | select(.metadata.container.tags[] | startswith("nightly.")) | {id: .id, updated_at: .updated_at} | @base64')

          sorted_tags=$(echo "$tags" | base64 --decode | jq -s 'sort_by(.updated_at) | reverse | .[2:]')

          for tag in $(echo "$sorted_tags" | jq -r '.[].id'); do
            echo "Deleting tag ID: $tag"
            curl -s -X DELETE -H "Authorization: Bearer $GHCR_TOKEN" "https://api.github.com/users/jeffborg/packages/container/evcc/versions/$tag"
          done
